"use strict";var R=Object.create;var m=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var F=Object.getPrototypeOf,C=Object.prototype.hasOwnProperty;var S=(e,s)=>{for(var r in s)m(e,r,{get:s[r],enumerable:!0})},f=(e,s,r,o)=>{if(s&&typeof s=="object"||typeof s=="function")for(let t of x(s))!C.call(e,t)&&t!==r&&m(e,t,{get:()=>s[t],enumerable:!(o=N(s,t))||o.enumerable});return e};var I=(e,s,r)=>(r=e!=null?R(F(e)):{},f(s||!e||!e.__esModule?m(r,"default",{value:e,enumerable:!0}):r,e)),v=e=>f(m({},"__esModule",{value:!0}),e);var b={};S(b,{CreateUserController:()=>P});module.exports=v(b);var p=require("zod");var y=require("uuid");var h=I(require("bcrypt")),n=class{get userEmail(){return this.props.userEmail}get userFullName(){return this.props.userFullName}get userPassword(){return this.props.userPassword}get userId(){return this.props.userId}set hashPasswordToUserPassword(s){this.props.userPassword=s}set updateUserFullName(s){this.props.userFullName=s}set updateUserEmail(s){this.props.userEmail=s}constructor(s){this.props=s}async encryptedPassword(s){return await h.default.hash(s,10)}async comparePasswords(s){return await h.default.compare(s,this.userPassword)}async updatePassword(s,r,o){if(!await this.comparePasswords(s))throw Error("Invalid password");if(r!==o)throw Error("Password confirmation must be the same as password");let i=await this.encryptedPassword(r);this.props.userPassword=i}};var u=class{constructor(s,r){this.createUserRepository=s;this.showUserperEmailRepository=r}async execute({userEmail:s,userFullName:r,userPassword:o}){if(await this.showUserperEmailRepository.show(s))throw Error("Email in use");let i=(0,y.v4)(),a=new n({userEmail:s,userFullName:r,userId:i,userPassword:o}),d=await a.encryptedPassword(o);return a.hashPasswordToUserPassword=d,await this.createUserRepository.create(a),a}};var g=require("@prisma/client"),c=new g.PrismaClient;var l=class{async create(s){let{userEmail:r,userFullName:o,userPassword:t,userId:i}=s,a=await c.user.create({data:{email:r,fullName:o,id:i,password_hash:t}});if(!a)throw Error("N\xE3o foi possivel criar o usuario");return a}};var w=class{async show(s){return await c.user.findUnique({where:{email:s}})}};var q=p.z.object({email:p.z.string().email(),fullName:p.z.string(),password:p.z.string()}),P=class{async handle(s,r,o){try{let{email:t,fullName:i,password:a}=q.parse(s.body),d=new l,E=new w,U=await new u(d,E).execute({userEmail:t,userFullName:i,userPassword:a});return r.status(200).json({email:U.userEmail,fullName:U.userFullName})}catch(t){o(t)}}};0&&(module.exports={CreateUserController});
