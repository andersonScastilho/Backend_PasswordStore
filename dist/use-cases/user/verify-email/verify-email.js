"use strict";var f=Object.create;var a=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var P=Object.getPrototypeOf,U=Object.prototype.hasOwnProperty;var R=(e,r)=>{for(var s in r)a(e,s,{get:r[s],enumerable:!0})},m=(e,r,s,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of y(r))!U.call(e,t)&&t!==s&&a(e,t,{get:()=>r[t],enumerable:!(o=v(r,t))||o.enumerable});return e};var w=(e,r,s)=>(s=e!=null?f(P(e)):{},m(r||!e||!e.__esModule?a(s,"default",{value:e,enumerable:!0}):s,e)),g=e=>m(a({},"__esModule",{value:!0}),e);var _={};R(_,{VerifyEmail:()=>p});module.exports=g(_);var h=w(require("events"));var u=require("@prisma/client"),T=new u.PrismaClient;var n=class extends h.default{},l=new n;var i=w(require("jsonwebtoken")),d=class{constructor(r){this.showUserPerUserIdRepository=r}async validAuth(r){let[,s]=r.split(" ");if(!i.default.verify(s,process.env.TOKEN_SECRET??""))throw Error("Invalid token");let{id:t,email:I}=i.default.verify(s,process.env.TOKEN_SECRET??""),c=await this.showUserPerUserIdRepository?.show(t);if(!c)throw Error("User not found");if(I!==c.email)throw Error("Invalid token");return t}async authentication(r,s){if(!await r.comparePasswords(s))throw Error("Invalid password");return i.default.sign({id:r.userId,email:r.userEmail},process.env.TOKEN_SECRET??"",{expiresIn:process.env.TOKEN_EXPIRATION})}async authenticationProvider(r,s){return i.default.sign({id:r,email:s},process.env.TOKEN_SECRET??"",{expiresIn:process.env.TOKEN_EXPIRATION})}},E=d;var p=class{constructor(r){this.showUserPerIdRepository=r}async execute(r){let o=await new E(this.showUserPerIdRepository).validAuth(r);return await this.showUserPerIdRepository.show(o)?(l.emit("user/verifiedEmail-update",o),!0):!1}};0&&(module.exports={VerifyEmail});
