"use strict";var y=Object.create;var i=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var v=(r,t)=>{for(var o in t)i(r,o,{get:t[o],enumerable:!0})},m=(r,t,o,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of l(t))!R.call(r,e)&&e!==o&&i(r,e,{get:()=>t[e],enumerable:!(s=w(t,e))||s.enumerable});return r};var P=(r,t,o)=>(o=r!=null?y(I(r)):{},m(t||!r||!r.__esModule?i(o,"default",{value:r,enumerable:!0}):o,r)),B=r=>m(i({},"__esModule",{value:!0}),r);var k={};v(k,{IndexStorageController:()=>u});module.exports=B(k);var f=require("@prisma/client"),h=new f.PrismaClient;var a=class{async index(t){return await h.storage.findMany({where:{userId:t}})}};var g=P(require("crypto")),E="aes-256-gcm",C=Buffer.from(process.env.SECRET_CRYPTO??"","hex"),N=g.default.randomBytes(16);var x=r=>{try{let t=g.default.createDecipheriv(E,C,Buffer.from(r.iv,"hex"));t.setAuthTag(Buffer.from(r.tag,"hex"));let o=Buffer.from(r.content,"hex");return Buffer.concat([t.update(o),t.final()]).toString("utf8")}catch{throw new Error("Erro ao descriptografar os dados.")}};var c=class{get storageId(){return this.props.storageId}get password(){return this.props.password}get account(){return this.props.account}get usageLocation(){return this.props.usageLocation}get link(){return this.props.link}get description(){return this.props.description}get userId(){return this.props.userId}set updatePassword(t){this.props.password=t}constructor(t){this.props=t}showPassword(t){let[o,s,e]=t.split(":");return x({iv:o,content:s,tag:e})}};var p=class{constructor(t){this.indexStorageRepository=t}async execute(t){let o=await this.indexStorageRepository.index(t),s=[];return o.forEach(e=>{let n=new c({account:e.account,password:"",storageId:e.id,usageLocation:e.usageLocation,userId:e.userId,description:e.description||void 0,link:e.link||void 0});s.push(n)}),s}};var d=require("zod"),L=d.z.object({userId:d.z.string()}),u=class{async handle(t,o,s){try{let{userId:e}=L.parse(t.params);if(!e)return o.status(401).json({error:"Login required"});let n=new a,S=await new p(n).execute(e);return o.status(200).json({storages:S})}catch(e){s(e)}}};0&&(module.exports={IndexStorageController});
