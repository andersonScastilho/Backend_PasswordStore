"use strict";var L=Object.create;var u=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,q=Object.prototype.hasOwnProperty;var N=(r,t)=>{for(var e in t)u(r,e,{get:t[e],enumerable:!0})},x=(r,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of b(t))!q.call(r,o)&&o!==e&&u(r,o,{get:()=>t[o],enumerable:!(s=T(t,o))||s.enumerable});return r};var $=(r,t,e)=>(e=r!=null?L(j(r)):{},x(t||!r||!r.__esModule?u(e,"default",{value:r,enumerable:!0}):e,r)),z=r=>x(u({},"__esModule",{value:!0}),r);var D={};N(D,{CreateStorageController:()=>w});module.exports=z(D);var B=require("uuid");var m=$(require("crypto")),v="aes-256-gcm",C=Buffer.from(process.env.SECRET_CRYPTO??"","hex"),R=m.default.randomBytes(16),I=r=>{try{let t=m.default.createCipheriv(v,C,R),e=Buffer.concat([t.update(r.toString()),t.final()]),s=t.getAuthTag();return{iv:R.toString("hex"),content:e.toString("hex"),tag:s.toString("hex")}}catch{throw Error("Erro ao criptografar os dados")}},P=r=>{try{let t=m.default.createDecipheriv(v,C,Buffer.from(r.iv,"hex"));t.setAuthTag(Buffer.from(r.tag,"hex"));let e=Buffer.from(r.content,"hex");return Buffer.concat([t.update(e),t.final()]).toString("utf8")}catch{throw new Error("Erro ao descriptografar os dados.")}};var f=class{get storageId(){return this.props.storageId}get password(){return this.props.password}get account(){return this.props.account}get usageLocation(){return this.props.usageLocation}get link(){return this.props.link}get description(){return this.props.description}get userId(){return this.props.userId}set updatePassword(t){this.props.password=t}constructor(t){this.props=t}showPassword(t){let[e,s,o]=t.split(":");return P({iv:e,content:s,tag:o})}};var h=class{constructor(t){this.storageRepository=t}async execute({account:t,password:e,usageLocation:s,description:o,link:a,userId:c}){let p=(0,B.v4)(),{iv:g,content:i,tag:S}=I(e),l=`${g}:${i}:${S}`,d=new f({password:l,account:t,usageLocation:s,description:o,link:a,userId:c,storageId:p});return await this.storageRepository.create(d),d.updatePassword="",d}};var k=require("@prisma/client"),E=new k.PrismaClient;var y=class{async create(t){let{account:e,description:s,link:o,password:a,usageLocation:c,userId:p,storageId:g}=t,i=await E.storage.create({data:{account:e,id:g,password:a,usageLocation:c,description:s,link:o,userId:p}});if(!i)throw Error("N\xE3o foi possivel armazenar os dados");return i}};var n=require("zod"),A=n.z.object({password:n.z.string(),account:n.z.string(),usageLocation:n.z.string(),link:n.z.string(),description:n.z.string()}),F=n.z.object({userId:n.z.string()}),w=class{async handle(t,e,s){try{let{password:o,account:a,usageLocation:c,link:p,description:g}=A.parse(t.body),{userId:i}=F.parse(t.params),S=new y,d=await new h(S).execute({account:a,password:o,usageLocation:c,description:g,link:p,userId:i});return e.status(200).json(d)}catch(o){s(o)}}};0&&(module.exports={CreateStorageController});
