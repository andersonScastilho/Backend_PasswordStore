"use strict";var U=Object.create;var a=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var x=(s,e)=>{for(var r in e)a(s,r,{get:e[r],enumerable:!0})},u=(s,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of P(e))!k.call(s,o)&&o!==r&&a(s,o,{get:()=>e[o],enumerable:!(t=R(e,o))||t.enumerable});return s};var N=(s,e,r)=>(r=s!=null?U(T(s)):{},u(e||!s||!s.__esModule?a(r,"default",{value:s,enumerable:!0}):r,s)),g=s=>u(a({},"__esModule",{value:!0}),s);var O={};x(O,{verifyEmail:()=>I});module.exports=g(O);var v=require("express");var y=require("zod");var i=N(require("jsonwebtoken")),d=class{constructor(e){this.showUserPerUserIdRepository=e}async validAuth(e){let[,r]=e.split(" ");if(!i.default.verify(r,process.env.TOKEN_SECRET??""))throw Error("Invalid token");let{id:o,email:m}=i.default.verify(r,process.env.TOKEN_SECRET??""),c=await this.showUserPerUserIdRepository?.show(o);if(m!==c?.email)throw Error("Invalid token");return o}async authentication(e,r){if(!await e.comparePasswords(r))throw Error("Invalid password");return i.default.sign({id:e.userId,email:e.userEmail},process.env.TOKEN_SECRET??"",{expiresIn:process.env.TOKEN_EXPIRATION})}async authenticationProvider(e,r){return i.default.sign({id:e,email:r},process.env.TOKEN_SECRET??"",{expiresIn:process.env.TOKEN_EXPIRATION})}},h=d;var p=class{constructor(e){this.showUserPerIdRepository=e}async execute(e){let t=await new h(this.showUserPerIdRepository).validAuth(e);return!!await this.showUserPerIdRepository.show(t)}};var w=require("@prisma/client"),f=new w.PrismaClient;var l=class{async show(e){return await f.user.findUnique({where:{id:e}})}};var S=y.z.string(),n=class{async handle(e,r,t){try{let o=S.parse(e.query.token);if(!o)return r.status(401).send("<h1>N\xE3o foi possivel validar seu e-mail</h1>");let m=new l,c=new p(m),E=`Bearer ${o}`;return await c.execute(E)===!1?r.status(400).send("<h1>N\xE3o foi possivel validar seu e-mail</h1>"):r.status(200).send("<h1>Email validado com sucesso</h1>")}catch{return r.status(400).send("<h1>N\xE3o foi possivel validar seu e-mail</h1>")}}};var I=(0,v.Router)(),C=new n;I.get("/verify-email",C.handle);0&&(module.exports={verifyEmail});
